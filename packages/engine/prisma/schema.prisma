generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id         Int         @id @default(autoincrement())
  name       String
  domains    String[]    @default([])
  payments   Payment[]
  connectors Connector[]

  @@map("projects")
}

model Provider {
  id         Int         @id @default(autoincrement())
  key        String      @unique
  title      String
  schema     Json
  methods    String[]
  payments   Payment[]
  connectors Connector[]

  @@map("providers")
}

model Connector {
  id         Int     @id @default(autoincrement())
  projectId  Int
  providerId Int
  name       String  @default("")
  schema     Json
  settings   Json?
  active     Boolean @default(false)

  project  Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  provider Provider @relation(fields: [providerId], references: [id])

  @@map("connectors")
}

model Payment {
  id         String        @id @default(uuid())
  status     PaymentStatus @default(CREATED)
  amount     Int
  paymentId  String?       @unique
  paymentUrl String?
  paymentQr  String?
  project    Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  Int
  provider   Provider      @relation(fields: [providerId], references: [id])
  providerId Int
  method     String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@map("payments")
}

enum PaymentStatus {
  CREATED
  PAID
  REFUND
}
