import type { ProjectDTO } from "@hfam/shared/dto/index";
import { InlineKeyboard } from "grammy";
import { connectorsApi } from "@/api/connectorsApi";
import { domainsApi } from "@/api/domainsApi";
import { projectsApi } from "@/api/projectsApi";
import type { MyContext } from "@/bot";

export async function viewProject(projectId: ProjectDTO["id"]) {
	const project = await projectsApi.getProject(projectId);
	const domains = await domainsApi.getDomains({ projectId });
	const connectors = await connectorsApi.getConnectors({
		projectId,
		active: true,
	});

	const lines = [
		`üìÅ <b>${project.name}</b> (ID: ${project.id})`,
		"",
		`üîó <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤:</b> ${domains.length}`,
		`üåê <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:</b> ${connectors.length}`,
		"",
	];

	const kb = new InlineKeyboard()
		.text("üîó –î–æ–º–µ–Ω—ã", `domains`)
		.text("üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã", `connectors`)
		.row()
		.text("üí≥ –ú–µ—Ç–æ–¥—ã", "methods")
		.row()
		.text(
			`ü§ñ –°—Å—ã–ª–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: ${project.supportLink}`,
			`project:configure:supportLink`,
		)
		.row()
		.text("‚õî –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", `project:delete`)
		.row()
		.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", `projects`);

	return { message: lines.join("\n"), kb };
}
