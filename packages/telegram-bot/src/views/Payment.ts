import type { PaymentDTO } from "@hfam/shared";
import { projectsApi } from "@/api/projectsApi";

export default async function viewPayment(payment: PaymentDTO) {
	const project = await projectsApi.getProject(payment.projectId);
	let status = "";

	switch (payment.status) {
		case "CREATED":
			status = "üü° –°–æ–∑–¥–∞–Ω";
			break;
		case "PAID":
			status = "üü¢ –ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω";
			break;
	}

	const lines = [
		`<b>üí≥ –ü–ª–∞—Ç—ë–∂ #${payment.id}</b>`,
		`${payment.paymentId ? `–í–Ω–µ—à–Ω–∏–π ID: ${payment.paymentId}` : ""}\n`,

		`–ü—Ä–æ–µ–∫—Ç: <b>${project.name}</b> (ID: ${project.id})`,
		`–î–æ–º–µ–Ω: <b>${payment.domain}</b>`,
		`–ü—Ä–æ–≤–∞–π–¥–µ—Ä: <b>${payment.connector.name}</b>`,
		`–ú–µ—Ç–æ–¥: <b>${payment.method || "‚Äî"}</b>\n`,

		`–°—É–º–º–∞: <b>${payment.amount}</b>`,
		`–°—Ç–∞—Ç—É—Å: <b>${status}</b>\n`,

		`–°–æ–∑–¥–∞–Ω: <b>${payment.createdAt.toLocaleString()}</b>`,
		`–û–±–Ω–æ–≤–ª—ë–Ω: <b>${payment.updatedAt.toLocaleString()}</b>`,
	].join("\n");

	return {
		message: lines,
	};
}
