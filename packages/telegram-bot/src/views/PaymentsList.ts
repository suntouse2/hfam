import { paymentsApi } from '@/api/paymentsApi'
import type { PaymentDTO } from '@hfam/shared/dto/index'
import { InlineKeyboard } from 'grammy'

export default async function viewPaymentsList(projectId: number, page = 1) {
	const perPage = 5

	const payments = await paymentsApi.getPayments({ projectId }, page, 10)

	const kb = new InlineKeyboard()

	for (const p of payments.data) {
		let color: string
		if (p.status === 'PAID') color = 'üü¢'
		else if (p.status === 'CREATED') color = 'üü°'
		else color = 'üî¥'

		const label = `${color} ${p.id} | ${p.domain} | ${p.amount}‚ÇΩ`
		kb.text(label, `payment:${p.id}`).row()
	}

	// –ø–∞–≥–∏–Ω–∞—Ü–∏—è
	if (page > 1) kb.text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', `payments:${page - 1}`)
	if (payments.data.length === perPage) kb.text('–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è', `payments:${page + 1}`)

	// –ø–æ–∏—Å–∫ –ø–æ –∞–π–¥–∏
	kb.row().text('üîç –ü–æ–∏—Å–∫ –ø–æ ID', 'payments:search')

	const message = `<b>–ü–ª–∞—Ç–µ–∂–∏ (—Å—Ç—Ä. ${page})</b>\n\n–í—ã–±–µ—Ä–∏ –ø–ª–∞—Ç—ë–∂ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.`

	return { message, kb }
}
