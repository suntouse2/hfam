import { InlineKeyboard } from 'grammy'
import type { Project } from '@prisma/client'
import { projectsService } from '@/services/projectsService'
import { connectorService } from '@/services/connectorsService'

export async function renderConnectorsList(projectId: Project['id']) {
	const project = await projectsService.getProject(projectId)
	if (!project) return { message: 'üíÄ –¢–∞–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ—Ç.', kb: new InlineKeyboard() }

	const connectors = await connectorService.findConnectors({ projectId: project.id })

	const lines = [
		`üìÅ <b>${project.name}</b> (ID: ${project.id})`,
		``,
		`üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞:`,
	]

	const kb = new InlineKeyboard()
	connectors.forEach(c => {
		const state = c.active ? 'üü¢ –í–∫–ª—é—á–µ–Ω' : '‚≠ï –í—ã–∫–ª—é—á–µ–Ω'
		const label = c.credentials.some(c => !c.value)
			? `${c.name} ‚îÉ ${c.provider.title} (ID: ${c.id}) ‚îÉ ‚öôÔ∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`
			: `${c.name} ‚îÉ ${c.provider.title} (ID: ${c.id}) ‚îÉ  ${state}`

		kb.text(label, `connector_${c.id}`).row()
	})
	kb.text('‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä ', `providers_${projectId}`).row(),
		kb.text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', `projects_${projectId}`)

	return { message: lines.join('\n'), kb }
}
